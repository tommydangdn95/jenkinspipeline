version: "3.0"

services:

 # store data
  zookeeper:
    image: confluentinc/cp-zookeeper:5.3.1
    container_name: zookeeper
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: "2181"
    volumes:
      - /media/zuk/datalog:/datalog
      - /media/zuk/data:/data
    ports:
      - "2181:2181"

  #broder
  kafka:
    image: confluentinc/cp-kafka:5.3.1
    container_name: kafka
    restart: always
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      # - schemaregistry
      - zookeeper

  #schema registry
  schemaregistry:
    image: confluentinc/cp-schema-registry:5.3.1
    container_name: schemaregistry
    restart: always
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: "zookeeper:2181"
      SCHEMA_REGISTRY_HOST_NAME: schemaregistry
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8081"
    ports:
      - 8081:8081
    depends_on:
      - zookeeper

  # rest api
  restproxy:
    image: confluentinc/cp-kafka-rest:5.3.1
    container_name: restproxy
    restart: always
    environment:
      KAFKA_REST_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_REST_LISTENERS: "http://0.0.0.0:8082"
      KAFKA_REST_SCHEMA_REGISTRY_URL: "http://schemaregistry:8081"
      KAFKA_REST_HOST_NAME: restproxy
      KAFKA_REST_DEBUG: "true"
    ports:
      - 8082:8082
    depends_on:
      - kafka
      - schemaregistry

  connector:
    image: confluentinc/cp-kafka-connect:5.3.1
    container_name: connector
    restart: always
    environment:
      CONNECT_REST_HOST_NAME: "connector"
      CONNECT_BOOTSTRAP_SERVERS: "kafka:9092"
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: "eoffqn"
      CONNECT_CONFIG_STORAGE_TOPIC: eoffqn-connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: eoffqn-connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: eoffqn-connect-status
      CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schemaregistry:8081'
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schemaregistry:8081'
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect"
      CONNECT_LOG4J_ROOT_LOGLEVEL: "INFO"
      CONNECT_LOG4J_LOGGERS: "org.apache.kafka.connect.runtime.rest=WARN,org.reflections=ERROR"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_PLUGIN_PATH: '/usr/share/java'
    volumes: 
      - /media/kafka-connect/file:/tmp/quickstart
      - /media/kafka-connect/jars:/etc/kafka-connect/jars
    ports:
      - "8083:8083"
    depends_on:
      - zookeeper
      - kafka
      - schemaregistry

  monitor:
    image: landoop/kafka-topics-ui
    container_name: monitor
    restart: always
    environment:
      KAFKA_REST_PROXY_URL: "http://restproxy:8082"
      PROXY: "true"
    ports:
      - "8000:8000"
    depends_on:
      - restproxy
